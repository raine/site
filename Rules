#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/static/*' do
end

route '/static/*' do
  item.identifier.to_s.sub(/\A\/static/, '')
end

compile '/css/styles.css/' do
  filter :sass, syntax: :scss
end

compile '/css/resume.concat/' do
  filter :erb
  filter :rainpress
end

compile '/css/*/' do
  # do nothing
end

compile '/js/resume.concat/' do
  filter :erb
  filter :uglify_js
end

compile '/js/*/' do
  # do nothing
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb, :trim_mode => "-"
  end
end

route '/*/resume.concat' do
  if production
    item.identifier.to_s[%r{/\w+/}] + 'resume.min.' + item[:extension]
  end
end

route '/css/*/' do
  unless production
    # Drop .scss if applicable
    if item[:extension] === "scss"
      item.identifier.chop
    else
      item.identifier.chop + '.' + item[:extension]
    end
  end
end

route '/js/*/' do
  unless production
    item.identifier.chop + '.' + item[:extension]
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.to_s.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier.to_s + 'index.html'
  end
end
